// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        (unknown)
// source: grpc/protos/transactions_filter_stream.proto

package org_dash_platform_dapi_v0

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TransactionsWithProofsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BloomFilter *BloomFilter `protobuf:"bytes,1,opt,name=bloom_filter,json=bloomFilter,proto3" json:"bloom_filter,omitempty"`
	// Types that are assignable to FromBlock:
	//	*TransactionsWithProofsRequest_FromBlockHash
	//	*TransactionsWithProofsRequest_FromBlockHeight
	FromBlock             isTransactionsWithProofsRequest_FromBlock `protobuf_oneof:"from_block"`
	Count                 uint32                                    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	SendTransactionHashes bool                                      `protobuf:"varint,5,opt,name=send_transaction_hashes,json=sendTransactionHashes,proto3" json:"send_transaction_hashes,omitempty"`
}

func (x *TransactionsWithProofsRequest) Reset() {
	*x = TransactionsWithProofsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsWithProofsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsWithProofsRequest) ProtoMessage() {}

func (x *TransactionsWithProofsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsWithProofsRequest.ProtoReflect.Descriptor instead.
func (*TransactionsWithProofsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_protos_transactions_filter_stream_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionsWithProofsRequest) GetBloomFilter() *BloomFilter {
	if x != nil {
		return x.BloomFilter
	}
	return nil
}

func (m *TransactionsWithProofsRequest) GetFromBlock() isTransactionsWithProofsRequest_FromBlock {
	if m != nil {
		return m.FromBlock
	}
	return nil
}

func (x *TransactionsWithProofsRequest) GetFromBlockHash() []byte {
	if x, ok := x.GetFromBlock().(*TransactionsWithProofsRequest_FromBlockHash); ok {
		return x.FromBlockHash
	}
	return nil
}

func (x *TransactionsWithProofsRequest) GetFromBlockHeight() uint32 {
	if x, ok := x.GetFromBlock().(*TransactionsWithProofsRequest_FromBlockHeight); ok {
		return x.FromBlockHeight
	}
	return 0
}

func (x *TransactionsWithProofsRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TransactionsWithProofsRequest) GetSendTransactionHashes() bool {
	if x != nil {
		return x.SendTransactionHashes
	}
	return false
}

type isTransactionsWithProofsRequest_FromBlock interface {
	isTransactionsWithProofsRequest_FromBlock()
}

type TransactionsWithProofsRequest_FromBlockHash struct {
	FromBlockHash []byte `protobuf:"bytes,2,opt,name=from_block_hash,json=fromBlockHash,proto3,oneof"`
}

type TransactionsWithProofsRequest_FromBlockHeight struct {
	FromBlockHeight uint32 `protobuf:"varint,3,opt,name=from_block_height,json=fromBlockHeight,proto3,oneof"`
}

func (*TransactionsWithProofsRequest_FromBlockHash) isTransactionsWithProofsRequest_FromBlock() {}

func (*TransactionsWithProofsRequest_FromBlockHeight) isTransactionsWithProofsRequest_FromBlock() {}

type BloomFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VData      []byte `protobuf:"bytes,1,opt,name=v_data,json=vData,proto3" json:"v_data,omitempty"`
	NHashFuncs uint32 `protobuf:"varint,2,opt,name=n_hash_funcs,json=nHashFuncs,proto3" json:"n_hash_funcs,omitempty"`
	NTweak     uint32 `protobuf:"varint,3,opt,name=n_tweak,json=nTweak,proto3" json:"n_tweak,omitempty"`
	NFlags     uint32 `protobuf:"varint,4,opt,name=n_flags,json=nFlags,proto3" json:"n_flags,omitempty"`
}

func (x *BloomFilter) Reset() {
	*x = BloomFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BloomFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BloomFilter) ProtoMessage() {}

func (x *BloomFilter) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BloomFilter.ProtoReflect.Descriptor instead.
func (*BloomFilter) Descriptor() ([]byte, []int) {
	return file_grpc_protos_transactions_filter_stream_proto_rawDescGZIP(), []int{1}
}

func (x *BloomFilter) GetVData() []byte {
	if x != nil {
		return x.VData
	}
	return nil
}

func (x *BloomFilter) GetNHashFuncs() uint32 {
	if x != nil {
		return x.NHashFuncs
	}
	return 0
}

func (x *BloomFilter) GetNTweak() uint32 {
	if x != nil {
		return x.NTweak
	}
	return 0
}

func (x *BloomFilter) GetNFlags() uint32 {
	if x != nil {
		return x.NFlags
	}
	return 0
}

type TransactionsWithProofsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Responses:
	//	*TransactionsWithProofsResponse_RawTransactions
	//	*TransactionsWithProofsResponse_InstantSendLockMessages
	//	*TransactionsWithProofsResponse_RawMerkleBlock
	Responses isTransactionsWithProofsResponse_Responses `protobuf_oneof:"responses"`
}

func (x *TransactionsWithProofsResponse) Reset() {
	*x = TransactionsWithProofsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsWithProofsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsWithProofsResponse) ProtoMessage() {}

func (x *TransactionsWithProofsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsWithProofsResponse.ProtoReflect.Descriptor instead.
func (*TransactionsWithProofsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_protos_transactions_filter_stream_proto_rawDescGZIP(), []int{2}
}

func (m *TransactionsWithProofsResponse) GetResponses() isTransactionsWithProofsResponse_Responses {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (x *TransactionsWithProofsResponse) GetRawTransactions() *RawTransactions {
	if x, ok := x.GetResponses().(*TransactionsWithProofsResponse_RawTransactions); ok {
		return x.RawTransactions
	}
	return nil
}

func (x *TransactionsWithProofsResponse) GetInstantSendLockMessages() *InstantSendLockMessages {
	if x, ok := x.GetResponses().(*TransactionsWithProofsResponse_InstantSendLockMessages); ok {
		return x.InstantSendLockMessages
	}
	return nil
}

func (x *TransactionsWithProofsResponse) GetRawMerkleBlock() []byte {
	if x, ok := x.GetResponses().(*TransactionsWithProofsResponse_RawMerkleBlock); ok {
		return x.RawMerkleBlock
	}
	return nil
}

type isTransactionsWithProofsResponse_Responses interface {
	isTransactionsWithProofsResponse_Responses()
}

type TransactionsWithProofsResponse_RawTransactions struct {
	RawTransactions *RawTransactions `protobuf:"bytes,1,opt,name=raw_transactions,json=rawTransactions,proto3,oneof"`
}

type TransactionsWithProofsResponse_InstantSendLockMessages struct {
	InstantSendLockMessages *InstantSendLockMessages `protobuf:"bytes,2,opt,name=instant_send_lock_messages,json=instantSendLockMessages,proto3,oneof"`
}

type TransactionsWithProofsResponse_RawMerkleBlock struct {
	RawMerkleBlock []byte `protobuf:"bytes,3,opt,name=raw_merkle_block,json=rawMerkleBlock,proto3,oneof"`
}

func (*TransactionsWithProofsResponse_RawTransactions) isTransactionsWithProofsResponse_Responses() {}

func (*TransactionsWithProofsResponse_InstantSendLockMessages) isTransactionsWithProofsResponse_Responses() {
}

func (*TransactionsWithProofsResponse_RawMerkleBlock) isTransactionsWithProofsResponse_Responses() {}

type RawTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions [][]byte `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *RawTransactions) Reset() {
	*x = RawTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawTransactions) ProtoMessage() {}

func (x *RawTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawTransactions.ProtoReflect.Descriptor instead.
func (*RawTransactions) Descriptor() ([]byte, []int) {
	return file_grpc_protos_transactions_filter_stream_proto_rawDescGZIP(), []int{3}
}

func (x *RawTransactions) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type InstantSendLockMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages [][]byte `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *InstantSendLockMessages) Reset() {
	*x = InstantSendLockMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantSendLockMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantSendLockMessages) ProtoMessage() {}

func (x *InstantSendLockMessages) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_protos_transactions_filter_stream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantSendLockMessages.ProtoReflect.Descriptor instead.
func (*InstantSendLockMessages) Descriptor() ([]byte, []int) {
	return file_grpc_protos_transactions_filter_stream_proto_rawDescGZIP(), []int{4}
}

func (x *InstantSendLockMessages) GetMessages() [][]byte {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_grpc_protos_transactions_filter_stream_proto protoreflect.FileDescriptor

var file_grpc_protos_transactions_filter_stream_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19,
	0x6f, 0x72, 0x67, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x22, 0x9e, 0x02, 0x0a, 0x1d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x42, 0x6c,
	0x6f, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x6f, 0x6d,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x2c, 0x0a, 0x11, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0f, 0x66,
	0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x78, 0x0a, 0x0b, 0x42, 0x6c,
	0x6f, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x46, 0x75, 0x6e,
	0x63, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x5f, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x54, 0x77, 0x65, 0x61, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x1e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x72, 0x61, 0x77, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x61,
	0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52,
	0x0f, 0x72, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x71, 0x0a, 0x1a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x6b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x48, 0x00, 0x52, 0x17, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x0b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0f,
	0x52, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x35, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x32, 0xb7, 0x01, 0x0a, 0x18, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x9a, 0x01, 0x0a, 0x21, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x12, 0x38, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x64, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_protos_transactions_filter_stream_proto_rawDescOnce sync.Once
	file_grpc_protos_transactions_filter_stream_proto_rawDescData = file_grpc_protos_transactions_filter_stream_proto_rawDesc
)

func file_grpc_protos_transactions_filter_stream_proto_rawDescGZIP() []byte {
	file_grpc_protos_transactions_filter_stream_proto_rawDescOnce.Do(func() {
		file_grpc_protos_transactions_filter_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_protos_transactions_filter_stream_proto_rawDescData)
	})
	return file_grpc_protos_transactions_filter_stream_proto_rawDescData
}

var file_grpc_protos_transactions_filter_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_grpc_protos_transactions_filter_stream_proto_goTypes = []interface{}{
	(*TransactionsWithProofsRequest)(nil),  // 0: org.dash.platform.dapi.v0.TransactionsWithProofsRequest
	(*BloomFilter)(nil),                    // 1: org.dash.platform.dapi.v0.BloomFilter
	(*TransactionsWithProofsResponse)(nil), // 2: org.dash.platform.dapi.v0.TransactionsWithProofsResponse
	(*RawTransactions)(nil),                // 3: org.dash.platform.dapi.v0.RawTransactions
	(*InstantSendLockMessages)(nil),        // 4: org.dash.platform.dapi.v0.InstantSendLockMessages
}
var file_grpc_protos_transactions_filter_stream_proto_depIdxs = []int32{
	1, // 0: org.dash.platform.dapi.v0.TransactionsWithProofsRequest.bloom_filter:type_name -> org.dash.platform.dapi.v0.BloomFilter
	3, // 1: org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_transactions:type_name -> org.dash.platform.dapi.v0.RawTransactions
	4, // 2: org.dash.platform.dapi.v0.TransactionsWithProofsResponse.instant_send_lock_messages:type_name -> org.dash.platform.dapi.v0.InstantSendLockMessages
	0, // 3: org.dash.platform.dapi.v0.TransactionsFilterStream.subscribeToTransactionsWithProofs:input_type -> org.dash.platform.dapi.v0.TransactionsWithProofsRequest
	2, // 4: org.dash.platform.dapi.v0.TransactionsFilterStream.subscribeToTransactionsWithProofs:output_type -> org.dash.platform.dapi.v0.TransactionsWithProofsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_grpc_protos_transactions_filter_stream_proto_init() }
func file_grpc_protos_transactions_filter_stream_proto_init() {
	if File_grpc_protos_transactions_filter_stream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_protos_transactions_filter_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsWithProofsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_protos_transactions_filter_stream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BloomFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_protos_transactions_filter_stream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsWithProofsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_protos_transactions_filter_stream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_protos_transactions_filter_stream_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantSendLockMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_grpc_protos_transactions_filter_stream_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TransactionsWithProofsRequest_FromBlockHash)(nil),
		(*TransactionsWithProofsRequest_FromBlockHeight)(nil),
	}
	file_grpc_protos_transactions_filter_stream_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TransactionsWithProofsResponse_RawTransactions)(nil),
		(*TransactionsWithProofsResponse_InstantSendLockMessages)(nil),
		(*TransactionsWithProofsResponse_RawMerkleBlock)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_protos_transactions_filter_stream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_protos_transactions_filter_stream_proto_goTypes,
		DependencyIndexes: file_grpc_protos_transactions_filter_stream_proto_depIdxs,
		MessageInfos:      file_grpc_protos_transactions_filter_stream_proto_msgTypes,
	}.Build()
	File_grpc_protos_transactions_filter_stream_proto = out.File
	file_grpc_protos_transactions_filter_stream_proto_rawDesc = nil
	file_grpc_protos_transactions_filter_stream_proto_goTypes = nil
	file_grpc_protos_transactions_filter_stream_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TransactionsFilterStreamClient is the client API for TransactionsFilterStream service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionsFilterStreamClient interface {
	SubscribeToTransactionsWithProofs(ctx context.Context, in *TransactionsWithProofsRequest, opts ...grpc.CallOption) (TransactionsFilterStream_SubscribeToTransactionsWithProofsClient, error)
}

type transactionsFilterStreamClient struct {
	cc grpc.ClientConnInterface
}

func NewTransactionsFilterStreamClient(cc grpc.ClientConnInterface) TransactionsFilterStreamClient {
	return &transactionsFilterStreamClient{cc}
}

func (c *transactionsFilterStreamClient) SubscribeToTransactionsWithProofs(ctx context.Context, in *TransactionsWithProofsRequest, opts ...grpc.CallOption) (TransactionsFilterStream_SubscribeToTransactionsWithProofsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TransactionsFilterStream_serviceDesc.Streams[0], "/org.dash.platform.dapi.v0.TransactionsFilterStream/subscribeToTransactionsWithProofs", opts...)
	if err != nil {
		return nil, err
	}
	x := &transactionsFilterStreamSubscribeToTransactionsWithProofsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TransactionsFilterStream_SubscribeToTransactionsWithProofsClient interface {
	Recv() (*TransactionsWithProofsResponse, error)
	grpc.ClientStream
}

type transactionsFilterStreamSubscribeToTransactionsWithProofsClient struct {
	grpc.ClientStream
}

func (x *transactionsFilterStreamSubscribeToTransactionsWithProofsClient) Recv() (*TransactionsWithProofsResponse, error) {
	m := new(TransactionsWithProofsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TransactionsFilterStreamServer is the server API for TransactionsFilterStream service.
type TransactionsFilterStreamServer interface {
	SubscribeToTransactionsWithProofs(*TransactionsWithProofsRequest, TransactionsFilterStream_SubscribeToTransactionsWithProofsServer) error
}

// UnimplementedTransactionsFilterStreamServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionsFilterStreamServer struct {
}

func (*UnimplementedTransactionsFilterStreamServer) SubscribeToTransactionsWithProofs(*TransactionsWithProofsRequest, TransactionsFilterStream_SubscribeToTransactionsWithProofsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeToTransactionsWithProofs not implemented")
}

func RegisterTransactionsFilterStreamServer(s *grpc.Server, srv TransactionsFilterStreamServer) {
	s.RegisterService(&_TransactionsFilterStream_serviceDesc, srv)
}

func _TransactionsFilterStream_SubscribeToTransactionsWithProofs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TransactionsWithProofsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TransactionsFilterStreamServer).SubscribeToTransactionsWithProofs(m, &transactionsFilterStreamSubscribeToTransactionsWithProofsServer{stream})
}

type TransactionsFilterStream_SubscribeToTransactionsWithProofsServer interface {
	Send(*TransactionsWithProofsResponse) error
	grpc.ServerStream
}

type transactionsFilterStreamSubscribeToTransactionsWithProofsServer struct {
	grpc.ServerStream
}

func (x *transactionsFilterStreamSubscribeToTransactionsWithProofsServer) Send(m *TransactionsWithProofsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _TransactionsFilterStream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "org.dash.platform.dapi.v0.TransactionsFilterStream",
	HandlerType: (*TransactionsFilterStreamServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "subscribeToTransactionsWithProofs",
			Handler:       _TransactionsFilterStream_SubscribeToTransactionsWithProofs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc/protos/transactions_filter_stream.proto",
}
